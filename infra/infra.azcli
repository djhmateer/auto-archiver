#!/bin/bash

# File to build Auto-Archiver VM on Azure

# For dev purposes only
cd ..
git add .
git commit -m "auto"
git push
cd infra

set -x

image=Canonical:0001-com-ubuntu-server-focal:20_04-lts-gen2:latest

# Generate a random suffix between 1 and 1000
int=$(shuf -i 1-1000 -n 1)

# If we are using passwords in the vm create below (default is to use SSH keys)
# Password must have the 3 of the following: 1 lower case character, 1 upper case character, 1 number and 1 special character
# generate a 34 character password (normal, capitals and numbers)
password=$(head /dev/urandom | tr -dc A-Za-z0-9 | head -c34)

# rgprefix=osrDemoAutoArchiver
rgprefix=cirAutoArchiver

rg=${rgprefix}${int}
# Don't put capitals in dns name below and it needs to be unique (ie not used in azure at the moment)
# dnsname=osrdemoautoarchiver${int}
dnsname=cirautoarchiver${int}

adminusername=dave
adminpassword=${password}

# region=westeurope
# region=centralindia
# region=northcentralus
region=eastus

vmname=${dnsname}vm
vnet=vnet${int}
subnet=subnet${int}
publicIPName=publicIP${int}
nsgname=nsg${int}
nicName=nic${int}

# resource group
az group create \
   --name ${rg} \
   --location ${region}

# virtual network
az network vnet create \
    --resource-group ${rg} \
    --name ${vnet} \
    --subnet-name ${subnet}

# nework security group
az network nsg create \
    --resource-group ${rg} \
    --name ${nsgname}

# public IP and associate with the given DNS name
# Basic or Standard for the ip-sku
az network public-ip create \
    --resource-group ${rg} \
    --name ${publicIPName} \
    --sku Standard \
    --zone 1 \
    --dns-name ${dnsname}

# nic and associate with vnet, publicip
az network nic create \
    --resource-group ${rg} \
    --name ${nicName} \
    --vnet-name ${vnet} \
    --subnet ${subnet} \
    --public-ip-address ${publicIPName} \
    --network-security-group ${nsgname}

# Create vm which runs the cloud init script to provision 

# If one of my keys exist 
# uncomment line below to get ssh keys working
filename="../secrets/sshkey-homelenovo-2004.pub"
if [ -f "$filename" ]; then
az vm create \
    --resource-group ${rg} \
    --name ${vmname} \
    --location ${region} \
    --nics ${nicName} \
    --image ${image} \
    --size Standard_B2s \
    --admin-username dave \
    --ssh-key-values ../secrets/sshkey-4790-2004.pub ../secrets/sshkey-homelenovo-2004.pub
else

    # --ssh-key-value ../secrets/id_rsa.pub
    # --ssh-key-values ../secrets/sshkey-homelenovo.pub ../secrets/sshkey-homelenovo-2004.pub 
    #--ssh-key-values ../secrets/sshkey-homelenovo.pub ../secrets/sshkey-homelenovo-2004.pub ../secrets/sshkey-4790-1804.pub ../secrets/sshkey-4790-2004.pub \
# 2004 lenovo key not working yet
    # --ssh-key-values ../secrets/sshkey-homelenovo-2004.pub \
 echo "ping"
# az vm create \
#     --resource-group ${rg} \
#     --name ${vmname} \
#     --location ${region} \
#     --nics ${nicName} \
#     --image ${image} \
#     --custom-data create_webserver.sh \
#     --admin-username ${adminusername} \
#     --admin-password ${adminpassword} \
#     --size Standard_B1s 

    # --size Standard_B1LS  # £2.82
    # --size Standard_B1s # £6.5pm (1GB and 1CPU)
    # --size Standard_B1ms # £13 (2GB and 1CPU)
    # --size Standard_B2s # £26.63 (4GB)
    # --size Standard_B2ms # £45 (8GB)
fi

# allow port 22 ssh (so that scp will work below)
az network nsg rule create \
    --resource-group ${rg} \
    --nsg-name ${nsgname} \
    --name nsgGroupRuleSSH22 \
    --protocol tcp \
    --priority 998 \
    --destination-port-range 22 \
    --access allow


# exit for testing ssh key working
# exit 1

az vm run-command invoke \
    -g ${rg} \
    -n ${vmname} \
    --command-id RunShellScript \
    --scripts @../infra/server-build.sh --parameters azure
# the param is just for my server-build script


# Wait for reboot from above
n=0
until [ "$n" -ge 20 ]
do
   scp -o StrictHostKeyChecking=no ../service_account.json dave@${dnsname}.westeurope.cloudapp.azure.com:/home/dave/auto-archiver/ && break
   n=$((n+1)) 
   sleep 15
done

scp -o StrictHostKeyChecking=no ../service_account_b.json dave@${dnsname}.westeurope.cloudapp.azure.com:/home/dave/auto-archiver/
scp -o StrictHostKeyChecking=no ../anon.session dave@${dnsname}.westeurope.cloudapp.azure.com:/home/dave/auto-archiver/

# configs
scp -o StrictHostKeyChecking=no ../config-aw.yaml dave@${dnsname}.westeurope.cloudapp.azure.com:/home/dave/auto-archiver/
scp -o StrictHostKeyChecking=no ../config-mw.yaml dave@${dnsname}.westeurope.cloudapp.azure.com:/home/dave/auto-archiver/
scp -o StrictHostKeyChecking=no ../config-eor.yaml dave@${dnsname}.westeurope.cloudapp.azure.com:/home/dave/auto-archiver/
scp -o StrictHostKeyChecking=no ../config-ukraine-environment.yaml dave@${dnsname}.westeurope.cloudapp.azure.com:/home/dave/auto-archiver/
scp -o StrictHostKeyChecking=no ../config-cir-projects.yaml dave@${dnsname}.westeurope.cloudapp.azure.com:/home/dave/auto-archiver/

scp -o StrictHostKeyChecking=no ../config-osr-demo.yaml dave@${dnsname}.westeurope.cloudapp.azure.com:/home/dave/auto-archiver/
scp -o StrictHostKeyChecking=no ../config-airwars.yaml dave@${dnsname}.westeurope.cloudapp.azure.com:/home/dave/auto-archiver/
scp -o StrictHostKeyChecking=no ../config-france24.yaml dave@${dnsname}.westeurope.cloudapp.azure.com:/home/dave/auto-archiver/
scp -o StrictHostKeyChecking=no ../config-un-demo.yaml dave@${dnsname}.westeurope.cloudapp.azure.com:/home/dave/auto-archiver/
scp -o StrictHostKeyChecking=no ../config-wagner-demo.yaml dave@${dnsname}.westeurope.cloudapp.azure.com:/home/dave/auto-archiver/
scp -o StrictHostKeyChecking=no ../config-amnesty-demo.yaml dave@${dnsname}.westeurope.cloudapp.azure.com:/home/dave/auto-archiver/

scp -o StrictHostKeyChecking=no ../config-cmu-demo.yaml dave@${dnsname}.westeurope.cloudapp.azure.com:/home/dave/auto-archiver/
scp -o StrictHostKeyChecking=no ../config-aa-demo-main.yaml dave@${dnsname}.westeurope.cloudapp.azure.com:/home/dave/auto-archiver/
scp -o StrictHostKeyChecking=no ../config-rmit-demo.yaml dave@${dnsname}.westeurope.cloudapp.azure.com:/home/dave/auto-archiver/
scp -o StrictHostKeyChecking=no ../config-bellingcat-demo.yaml dave@${dnsname}.westeurope.cloudapp.azure.com:/home/dave/auto-archiver/
scp -o StrictHostKeyChecking=no ../config-witness-demo.yaml dave@${dnsname}.westeurope.cloudapp.azure.com:/home/dave/auto-archiver/
scp -o StrictHostKeyChecking=no ../config-afp-demo.yaml dave@${dnsname}.westeurope.cloudapp.azure.com:/home/dave/auto-archiver/

# tokens
scp -o StrictHostKeyChecking=no ../secrets/token-davemateer-gmail.json dave@${dnsname}.westeurope.cloudapp.azure.com:/home/dave/auto-archiver/secrets/
scp -o StrictHostKeyChecking=no ../secrets/token-dataac.json dave@${dnsname}.westeurope.cloudapp.azure.com:/home/dave/auto-archiver/secrets/


# delete old resource groups
groupstodel=$(az group list --query "[?contains(name, '${rgprefix}')]".name --output tsv)

for rgtodel in $groupstodel
do
    if [ "$rgtodel" = "$rg" ]; then  
    echo "not deleting $rgtodel as have just created it"
    else
    #echo "leaving for now"
	az group delete \
            --name $rgtodel \
            --no-wait \
            --yes
    fi
done

# echo -e "\nssh -o StrictHostKeyChecking=no dave@${dnsname}.westeurope.cloudapp.azure.com\n" > sshCurrentVm.sh
echo -e "\nssh -o StrictHostKeyChecking=no dave@${dnsname}.westeurope.cloudapp.azure.com\n" > cirsshCurrentVm.sh

# echo -e "password is ${adminpassword}" > password.txt

echo -e "http://${dnsname}.westeurope.cloudapp.azure.com"
